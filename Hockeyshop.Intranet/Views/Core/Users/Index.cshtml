@model IEnumerable<Hockeyshop.Data.Data.Core.User>

@{
    ViewData["Title"] = "User";
    Layout = "_Layout";

    var columns = new List<string>
    {
        "ID",
        "First Name",
        "Last Name",
        "Email",
        "Login",
        "PostCode",
        "City",
        "Street And Number",
        "User Role"
    };

    CrudIndexContainerModel containerModel = new CrudIndexContainerModel
            {
                Title = "User",
                CreateAction = "Create",
                EnableSearch = true,
                SearchTerm = ViewBag.SearchTerm as string,
                Columns = columns,
                Rows = Model.Cast<object>(),
                GetValue = (row, col) =>
                {
                    var user = (Hockeyshop.Data.Data.Core.User)row; //rzutowanie wiersza na typ...
                    return col switch
                    {
                        "ID" => user.IdUser,
                        "First Name" => user.FirstName,
                        "Last Name" => user.LastName,
                        "Email" => user.Email,
                        "Login" => user.Login,
                        "PostCode" => user.PostCode,
                        "City" => user.City,
                        "Street And Number" => user.StreetAndNumber,
                        "User Role" => user.UserRole?.Role,
                        _ => ""
                    };
                },
                ActionLinks = row =>
                {
                    var user = (Hockeyshop.Data.Data.Core.User)row;
                    return $@"
                        <a href=""/Users/Edit/{user.IdUser}"" class=""btn btn-sm btn-outline-primary"">Edit</a>
                        <a href=""/Users/Details/{user.IdUser}"" class=""btn btn-sm btn-outline-info"">Details</a>
                        <a href=""/Users/Delete/{user.IdUser}"" class=""btn btn-sm btn-outline-danger"">Delete</a>
                    ";
                }
            };
}

@await Html.PartialAsync("_CrudIndexContainer", containerModel)
