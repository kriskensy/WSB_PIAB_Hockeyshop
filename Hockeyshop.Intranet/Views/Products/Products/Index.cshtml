@using Hockeyshop.Intranet.Extensions

@model IEnumerable<Hockeyshop.Data.Data.Products.Product>

@{
    ViewData["Title"] = "Product";
    Layout = "_Layout";

    var columns = new List<string>
    {
        "ID",
        "Image",
        "Name",
        "Product Category",
        "Unit Price",
        "Supplier",
        "Is Highlight?",
        "Is new arrival?",
        "Description"
    };

    CrudIndexContainerModel containerModel = new CrudIndexContainerModel
            {
                Title = "Products",
                CreateAction = "Create",
                EnableSearch = true,
                SearchTerm = ViewBag.SearchTerm as string,
                Columns = columns,
                Rows = Model.Cast<object>(),
                GetValue = (row, col) =>
                {
                    var product = (Hockeyshop.Data.Data.Products.Product)row; //rzutowanie wiersza na typ...
                    return col switch
                    {
                        "ID" => product.IdProduct,
                        "Image" => product.GetProductImageHtml(), //tutaj uzywam extension
                        "Name" => product.Name,
                        "Product Category" => product.ProductCategory?.Name,
                        "Unit Price" => product.Price.ToString("C"),
                        "Supplier" => product.Supplier?.Name,
                        "Is Highlight?" => product.Highlight
                            ? "<span class='text-success'>&#x2714;</span>"
                            : "<span class='text-danger'>&#x2718;</span>",
                        "Is new arrival?" => product.NewArrival
                            ? "<span class='text-success'>&#x2714;</span>"
                            : "<span class='text-danger'>&#x2718;</span>",
                        "Description" => product.Description,
                        _ => ""
                    };
                },
                ActionLinks = row =>
                {
                    var product = (Hockeyshop.Data.Data.Products.Product)row;
                    return $@"
                        <a href=""/Products/Edit/{product.IdProduct}"" class=""btn btn-sm btn-outline-primary"">Edit</a>
                        <a href=""/Products/Details/{product.IdProduct}"" class=""btn btn-sm btn-outline-info"">Details</a>
                        <a href=""/Products/Delete/{product.IdProduct}"" class=""btn btn-sm btn-outline-danger"">Delete</a>
                    ";
                }
            };
}

@await Html.PartialAsync("_CrudIndexContainer", containerModel)