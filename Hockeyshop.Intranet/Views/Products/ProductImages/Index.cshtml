@using Hockeyshop.Intranet.Extensions
@model IEnumerable<Hockeyshop.Data.Data.Products.ProductImage>

@{
    ViewData["Title"] = "Products images";
    Layout = "_Layout";

    var columns = new List<string>
    {
        "ID",
        "Image",
        "Product ID"
    };

    CrudIndexContainerModel containerModel = new CrudIndexContainerModel
    {
        Title = "Product Images",
        CreateAction = "Create",
        EnableSearch = false,
        Columns = columns,
        Rows = Model.Cast<object>(),
        GetValue = (row, col) =>
        {
            var img = (Hockeyshop.Data.Data.Products.ProductImage)row;
            return col switch
            {
                "ID" => img.IdProductImage,
                "Image" => $"<img src='{img.ImageUrl}' alt='img' style='max-width:80px;max-height:80px;' />",
                "Product ID" => img.IdProduct,
                _ => ""
            };
        },
        ActionLinks = row =>
        {
            var img = (Hockeyshop.Data.Data.Products.ProductImage)row;
            return $@"
                        <a href=""/ProductImages/Edit/{img.IdProductImage}"" class=""btn btn-sm btn-outline-primary"">Edit</a>
                        <a href=""/ProductImages/Details/{img.IdProductImage}"" class=""btn btn-sm btn-outline-info"">Details</a>
                        <a href=""/ProductImages/Delete/{img.IdProductImage}"" class=""btn btn-sm btn-outline-danger"">Delete</a>
                    ";
        }
    };
}

@await Html.PartialAsync("_CrudIndexContainer", containerModel)
