@model IEnumerable<Hockeyshop.Data.Data.Orders.Invoice>

@{
    ViewData["Title"] = "Invoices";
    Layout = "_Layout";

    var columns = new List<string>
    {
        "ID",
        "Invoice Number",
        "Order",
        "Issue Date",
        "User Firstname",
        "User Lastname",
        "Total Amount"
    };

    CrudIndexContainerModel containerModel = new CrudIndexContainerModel
    {
        Title = "Invoices",
        CreateAction = "Create",
        EnableSearch = true,
        SearchTerm = ViewBag.SearchTerm as string,
        Columns = columns,
        Rows = Model.Cast<object>(),
        GetValue = (row, col) =>
        {
            var invoice = (Hockeyshop.Data.Data.Orders.Invoice)row; //rzutowanie wiersza na typ...
            return col switch
            {
                "ID" => invoice.IdInvoice,
                "Invoice Number" => invoice.InvoiceNumber,
                "Order" => invoice.Order?.IdOrder,
                "Issue Date" => invoice.IssueDate.ToShortDateString(),
                "User Firstname" => invoice.User?.FirstName,
                "User Lastname" => invoice.User?.LastName,
                "Total Amount" => invoice.Order?.TotalAmount.ToString("C"), //formatowanie do waluty
                _ => ""
            };
        },
        ActionLinks = row =>
        {
            var invoice = (Hockeyshop.Data.Data.Orders.Invoice)row;
            return $@"
                <a href=""/Invoices/Edit/{invoice.IdInvoice}"" class=""btn btn-sm btn-outline-primary"">Edit</a>
                <a href=""/Invoices/Details/{invoice.IdInvoice}"" class=""btn btn-sm btn-outline-info"">Details</a>
                <a href=""/Invoices/Delete/{invoice.IdInvoice}"" class=""btn btn-sm btn-outline-danger"">Delete</a>
            ";
        }
    };
}

@await Html.PartialAsync("_CrudIndexContainer", containerModel)