@model IEnumerable<Hockeyshop.Data.Data.Orders.OrderItem>

@{
    ViewData["Title"] = "OrderItem";
    Layout = "_Layout";

    var columns = new List<string>
    {
        "ID",
        "Order",
        "Product",
        "Product Category",
        "Quantity",
        "Unit Price"
    };

    CrudIndexContainerModel containerModel = new CrudIndexContainerModel
            {
                Title = "Order Item",
                CreateAction = "Create",
                EnableSearch = true,
                SearchTerm = ViewBag.SearchTerm as string,
                Columns = columns,
                Rows = Model.Cast<object>(),
                GetValue = (row, col) =>
                {
                    var orderItem = (Hockeyshop.Data.Data.Orders.OrderItem)row; //rzutowanie wiersza na typ...
                    return col switch
                    {
                        "ID" => orderItem.IdOrderItem,
                        "Order" => orderItem.Order?.IdOrder,
                        "Product" => orderItem.Product?.Name,
                        "Product Category" => orderItem.Product?.ProductCategory?.Name,
                        "Quantity" => orderItem.Quantity,
                        "Unit Price" => orderItem.UnitPrice.ToString("C"), //formatowanie do waluty
                        _ => ""
                    };
                },
                ActionLinks = row =>
                {
                    var orderItem = (Hockeyshop.Data.Data.Orders.OrderItem)row;
                    return $@"
                        <a href=""/OrderItems/Edit/{orderItem.IdOrderItem}"" class=""btn btn-sm btn-outline-primary"">Edit</a>
                        <a href=""/OrderItems/Details/{orderItem.IdOrderItem}"" class=""btn btn-sm btn-outline-info"">Details</a>
                        <a href=""/OrderItems/Delete/{orderItem.IdOrderItem}"" class=""btn btn-sm btn-outline-danger"">Delete</a>
                    ";
                }
            };
}

@await Html.PartialAsync("_CrudIndexContainer", containerModel)