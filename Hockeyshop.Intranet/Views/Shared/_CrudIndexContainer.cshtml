@model CrudIndexContainerModel

@* Model.Columns -> lista z nagłówkami kolumn
Model.Rows -> kolekcja obiektów (Products, Orders, itd)
Model.GetValue -> ta funkcja wyciąga wartość dla danej kolumny
Model.ActionLinks -> HTML, renderuje akcje dla rekordu *@


<div class="container-fluid">
    <div class="row justify-content-start">
        <div class="col-lg-10 col-xl-8">
            <div class="crud-index-container">
                <div class="index-header mb-4 d-flex justify-content-between align-items-center">
                    <h3>@Model.Title</h3>
                    <a asp-action="@Model.CreateAction" class="btn btn-success"> <!--akcja kontrolera-->
                        <i class="bi bi-plus-circle"></i> Create New
                    </a>
                </div>

                <!-- wyszukiwanie dynamiczne w zależności od flagi (jeśli true to formularz jest renderowany-->
                @if (Model.EnableSearch)
                {
                    <form asp-action="Index" method="get" class="mb-4">
                        <div class="input-group">
                            <input type="text" name="searchTerm" class="form-control" placeholder="Search..." value="@Model.SearchTerm"/>
                            <button type="submit" class="btn btn-primary ms-2">Search</button>
                        </div>
                    </form>
                }

                <!-- tabela -->
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-primary">
                            <tr>
                                @foreach(var col in Model.Columns) //generuje dynamicznie nagłówki
                                {
                                    <th>@col</th>
                                }
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach(var row in Model.Rows)
                            {
                                <tr>
                                    @foreach(var col in Model.Columns)
                                    {
                                        @* <td>@Model.GetValue(row, col)</td> //pobiera wartość komórki *@
                                        <td>@Html.Raw(Model.GetValue(row, col))</td>
                                        //pobiera wartość komórki
                                    }
                                    <td>@Html.Raw(Model.ActionLinks(row))</td> <!--renderowanie przycisków akcji-->
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>