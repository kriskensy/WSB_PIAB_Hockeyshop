// <auto-generated />
using System;
using Hockeyshop.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hockeyshop.Data.Migrations
{
    [DbContext(typeof(HockeyshopContext))]
    [Migration("20250427165747_M1")]
    partial class M1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hockeyshop.Data.Data.CMS.HockeyNews", b =>
                {
                    b.Property<int>("IdNews")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNews"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdNews");

                    b.ToTable("HockeyNews");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Documents.Document", b =>
                {
                    b.Property<int>("IdDocument")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDocument"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdDocument");

                    b.HasIndex("IdCategory");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Documents.DocumentCategory", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategory"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCategory");

                    b.ToTable("DocumentCategory");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Help.FaqCategory", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategory"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCategory");

                    b.ToTable("FaqCategory");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Help.FaqEntry", b =>
                {
                    b.Property<int>("IdFaq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFaq"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("IdFaq");

                    b.HasIndex("IdCategory");

                    b.ToTable("FaqEntry");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Inventory.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdSupplier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductCategoryIdCategory")
                        .HasColumnType("int");

                    b.Property<int?>("ProductIdProduct")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierIdSupplier")
                        .HasColumnType("int");

                    b.HasKey("IdProduct");

                    b.HasIndex("ProductCategoryIdCategory");

                    b.HasIndex("ProductIdProduct");

                    b.HasIndex("SupplierIdSupplier");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Inventory.ProductCategory", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategory"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCategory");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Inventory.Stock", b =>
                {
                    b.Property<int>("IdStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStock"));

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IdStock");

                    b.HasIndex("IdProduct");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Inventory.Supplier", b =>
                {
                    b.Property<int>("IdSupplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSupplier"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdSupplier");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Management.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUser");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Orders.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrder"));

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsersIdUser")
                        .HasColumnType("int");

                    b.HasKey("IdOrder");

                    b.HasIndex("UsersIdUser");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Orders.OrderItem", b =>
                {
                    b.Property<int>("IdOrderItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrderItem"));

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("OrdersIdOrder")
                        .HasColumnType("int");

                    b.Property<int>("ProductsIdProduct")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdOrderItem");

                    b.HasIndex("OrdersIdOrder");

                    b.HasIndex("ProductsIdProduct");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Support.Ticket", b =>
                {
                    b.Property<int>("IdTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTicket"));

                    b.Property<DateTime>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTicket");

                    b.HasIndex("IdUser");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Documents.Document", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Documents.DocumentCategory", "DocumentCategory")
                        .WithMany("Documents")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentCategory");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Help.FaqEntry", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Help.FaqCategory", "FaqCategory")
                        .WithMany("FaqEntries")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FaqCategory");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Inventory.Product", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Inventory.ProductCategory", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryIdCategory");

                    b.HasOne("Hockeyshop.Data.Data.Inventory.Product", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductIdProduct");

                    b.HasOne("Hockeyshop.Data.Data.Inventory.Supplier", null)
                        .WithMany("Products")
                        .HasForeignKey("SupplierIdSupplier");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Inventory.Stock", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Inventory.Product", "Product")
                        .WithMany("Stocks")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Orders.Order", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Management.User", "Users")
                        .WithMany("Users")
                        .HasForeignKey("UsersIdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Orders.OrderItem", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Orders.Order", "Orders")
                        .WithMany()
                        .HasForeignKey("OrdersIdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hockeyshop.Data.Data.Inventory.Product", "Products")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductsIdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Support.Ticket", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Management.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Documents.DocumentCategory", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Help.FaqCategory", b =>
                {
                    b.Navigation("FaqEntries");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Inventory.Product", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Products");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Inventory.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Inventory.Supplier", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Management.User", b =>
                {
                    b.Navigation("Tickets");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
