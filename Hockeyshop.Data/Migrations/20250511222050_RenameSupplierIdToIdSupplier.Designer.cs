// <auto-generated />
using System;
using Hockeyshop.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hockeyshop.Data.Migrations
{
    [DbContext(typeof(HockeyshopContext))]
    [Migration("20250511222050_RenameSupplierIdToIdSupplier")]
    partial class RenameSupplierIdToIdSupplier
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hockeyshop.Data.Data.CMS.HockeyNews", b =>
                {
                    b.Property<int>("IdHockeyNews")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHockeyNews"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAuthor")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Published")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHockeyNews");

                    b.HasIndex("IdAuthor");

                    b.ToTable("HockeyNews");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Cart.CartItem", b =>
                {
                    b.Property<int>("IdCartItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCartItem"));

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdUserCart")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdCartItem");

                    b.HasIndex("IdProduct");

                    b.HasIndex("IdUserCart");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Cart.UserCart", b =>
                {
                    b.Property<int>("IdUserCart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUserCart"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("IdUserCart");

                    b.HasIndex("IdUser");

                    b.ToTable("UserCarts");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Core.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUserRole")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAndNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdUserRole");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Core.UserRole", b =>
                {
                    b.Property<int>("IdUserRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUserRole"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUserRole");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Inventory.Stock", b =>
                {
                    b.Property<int>("IdStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStock"));

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdStock");

                    b.HasIndex("IdProduct");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Marketing.DiscountType", b =>
                {
                    b.Property<int>("IdDiscountType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiscountType"));

                    b.Property<string>("DiscountTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDiscountType");

                    b.ToTable("DiscountTypes");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Marketing.ProductPromotion", b =>
                {
                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdPromotion")
                        .HasColumnType("int");

                    b.HasKey("IdProduct", "IdPromotion");

                    b.HasIndex("IdPromotion");

                    b.ToTable("ProductPromotions");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Marketing.Promotion", b =>
                {
                    b.Property<int>("IdPromotion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPromotion"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDiscountType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPromotion");

                    b.HasIndex("IdDiscountType");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Orders.Invoice", b =>
                {
                    b.Property<int>("IdInvoice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInvoice"));

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserIdUser")
                        .HasColumnType("int");

                    b.HasKey("IdInvoice");

                    b.HasIndex("IdOrder")
                        .IsUnique();

                    b.HasIndex("IdUser");

                    b.HasIndex("UserIdUser");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Orders.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrder"));

                    b.Property<int?>("IdOrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdOrder");

                    b.HasIndex("IdOrderStatus");

                    b.HasIndex("IdUser");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Orders.OrderItem", b =>
                {
                    b.Property<int>("IdOrderItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrderItem"));

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdOrderItem");

                    b.HasIndex("IdOrder");

                    b.HasIndex("IdProduct");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Orders.OrderStatus", b =>
                {
                    b.Property<int>("IdOrderStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrderStatus"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOrderStatus");

                    b.ToTable("OrderStatuses");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Payments.Payment", b =>
                {
                    b.Property<int>("IdPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPayment"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdPaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("IdPaymentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPayment");

                    b.HasIndex("IdOrder")
                        .IsUnique();

                    b.HasIndex("IdPaymentMethod");

                    b.HasIndex("IdPaymentStatus");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Payments.PaymentMethod", b =>
                {
                    b.Property<int>("IdPaymentMethod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaymentMethod"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPaymentMethod");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Payments.PaymentStatus", b =>
                {
                    b.Property<int>("IdPaymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaymentStatus"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPaymentStatus");

                    b.ToTable("PaymentStatuses");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Products.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProductCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdSupplier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdProduct");

                    b.HasIndex("IdProductCategory");

                    b.HasIndex("IdSupplier");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Products.ProductCategory", b =>
                {
                    b.Property<int>("IdProductCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductCategory"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProductCategory");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Products.ProductImage", b =>
                {
                    b.Property<int>("IdProductImage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductImage"));

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProductImage");

                    b.HasIndex("IdProduct");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Products.Supplier", b =>
                {
                    b.Property<int>("IdSupplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSupplier"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAndNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSupplier");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.CMS.HockeyNews", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Core.User", "Author")
                        .WithMany("AuthoredNews")
                        .HasForeignKey("IdAuthor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Cart.CartItem", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Products.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hockeyshop.Data.Data.Cart.UserCart", "UserCart")
                        .WithMany("CartItems")
                        .HasForeignKey("IdUserCart")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("UserCart");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Cart.UserCart", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Core.User", "User")
                        .WithMany("UserCarts")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Core.User", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Core.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("IdUserRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Inventory.Stock", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Products.Product", "Product")
                        .WithMany("Stocks")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Marketing.ProductPromotion", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Products.Product", "Product")
                        .WithMany("ProductPromotions")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hockeyshop.Data.Data.Marketing.Promotion", "Promotion")
                        .WithMany("ProductPromotions")
                        .HasForeignKey("IdPromotion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Marketing.Promotion", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Marketing.DiscountType", "DiscountType")
                        .WithMany("Promotions")
                        .HasForeignKey("IdDiscountType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscountType");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Orders.Invoice", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Orders.Order", "Order")
                        .WithOne("Invoice")
                        .HasForeignKey("Hockeyshop.Data.Data.Orders.Invoice", "IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hockeyshop.Data.Data.Core.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Hockeyshop.Data.Data.Core.User", null)
                        .WithMany("Invoices")
                        .HasForeignKey("UserIdUser");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Orders.Order", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Orders.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("IdOrderStatus");

                    b.HasOne("Hockeyshop.Data.Data.Core.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Orders.OrderItem", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Orders.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hockeyshop.Data.Data.Products.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Payments.Payment", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Orders.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("Hockeyshop.Data.Data.Payments.Payment", "IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hockeyshop.Data.Data.Payments.PaymentMethod", "PaymentMethod")
                        .WithMany("Payments")
                        .HasForeignKey("IdPaymentMethod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hockeyshop.Data.Data.Payments.PaymentStatus", "PaymentStatus")
                        .WithMany("Payments")
                        .HasForeignKey("IdPaymentStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("PaymentMethod");

                    b.Navigation("PaymentStatus");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Products.Product", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Products.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("IdProductCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hockeyshop.Data.Data.Products.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("IdSupplier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Products.ProductImage", b =>
                {
                    b.HasOne("Hockeyshop.Data.Data.Products.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Cart.UserCart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Core.User", b =>
                {
                    b.Navigation("AuthoredNews");

                    b.Navigation("Invoices");

                    b.Navigation("Orders");

                    b.Navigation("UserCarts");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Core.UserRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Marketing.DiscountType", b =>
                {
                    b.Navigation("Promotions");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Marketing.Promotion", b =>
                {
                    b.Navigation("ProductPromotions");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Orders.Order", b =>
                {
                    b.Navigation("Invoice")
                        .IsRequired();

                    b.Navigation("OrderItems");

                    b.Navigation("Payment")
                        .IsRequired();
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Orders.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Payments.PaymentMethod", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Payments.PaymentStatus", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Products.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderItems");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductPromotions");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Products.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Hockeyshop.Data.Data.Products.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
